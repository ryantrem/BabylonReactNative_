package com.reactlibrary;

import android.view.SurfaceHolder;
import android.view.SurfaceView;

import com.facebook.react.bridge.Arguments;
import com.facebook.react.bridge.ReactContext;
import com.facebook.react.bridge.WritableMap;
import com.facebook.react.uimanager.events.RCTEventEmitter;

public class EngineView extends SurfaceView implements SurfaceHolder.Callback2 {
    private final ReactContext reactContext;
    private boolean initialized;

    public EngineView(ReactContext reactContext) {
        super(reactContext);
        this.reactContext = reactContext;
        this.getHolder().addCallback(this);
    }

    @Override
    public void surfaceRedrawNeeded(SurfaceHolder surfaceHolder) {

    }

    @Override
    public void surfaceCreated(SurfaceHolder surfaceHolder) {
        // surfaceChanged is also called when the surface is created, so just do all the handling there
    }

    @Override
    public void surfaceChanged(SurfaceHolder surfaceHolder, int i, int i1, int i2) {
        this.reactContext.runOnJSQueueThread(() -> {
            BabylonNativeInterop.setView(this.reactContext, surfaceHolder.getSurface());
            if (!this.initialized) {
                this.reactContext.runOnJSQueueThread(() -> {
                    this.reactContext.runOnUiQueueThread(() -> {
                        WritableMap event = Arguments.createMap();
                        this.reactContext.getJSModule(RCTEventEmitter.class).receiveEvent(this.getId(), "viewReady", event);
                    });
                });
                this.initialized = true;
            }
        });
    }

    @Override
    public void surfaceDestroyed(SurfaceHolder surfaceHolder) {

    }
}
