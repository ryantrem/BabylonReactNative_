package com.reactlibrary;

import android.view.Surface;

import com.babylon.GetJsGlobalContextRef;
import com.facebook.react.bridge.LifecycleEventListener;
import com.facebook.react.bridge.ReactContext;

final class BabylonNativeInterop {
    // JNI interface
    static {
        System.loadLibrary("BabylonNative");
    }

    private static native void initEngine(long jsContextRef, Surface surface);
    static native void resetEngine(Surface surface);

    static void initEngine(ReactContext reactContext, Surface surface) {
        GetJsGlobalContextRef getJsGlobalContextRef = new GetJsGlobalContextRef();
        long jsContextHandle = reactContext.getJavaScriptContextHolder().get();
        long jsContextRef = getJsGlobalContextRef.GetJsGlobalContextRef(jsContextHandle);
        initEngine(jsContextRef, surface);

        reactContext.addLifecycleEventListener(new LifecycleEventListener() {
            @Override
            public void onHostResume() {
                // TODO: Probably call into native interop to resume (e.g. resume XR/ARCore)
            }

            @Override
            public void onHostPause() {
                // TODO: Probably call into native interop to pause (e.g. resume XR/ARCore)
            }

            @Override
            public void onHostDestroy() {
                // TODO: ?
            }
        });
    }
}
